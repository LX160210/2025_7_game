#include <graphics.h> 
#include <conio.h> 
#include <math.h> 

#define High 480  // 游戏画面尺寸 
#define Width 640 
#define PI 3.14159 

void main()
{
	initgraph(Width, High);  // 初始化 640 x 480 的绘图窗口 
	int center_x, center_y;      // 中心点的坐标，也是表的中心 
	center_x = Width / 2;
	center_y = High / 2;
	int secondLength = Width / 5;    // 秒针的长度 
	int secondEnd_x, secondEnd_y;    // 秒针的终点 
	int minuteLength = Width / 6;    //分针的长度
	int minuteEnd_x, minuteEnd_y;    //分针的终点
	int hourLength = Width / 7;      //时针的长度
	int hourEnd_x, hourEnd_y;        //时针的终点


	float secondAngle = 0;       // 秒钟对应的角度 
	float minuteAngle = 0;       //分针对应的角度
	float hourAngle = 0;         //时针对应的角度


	SYSTEMTIME ti;    // 定义变量保存当前时间 

	while (1)
	{
		BeginBatchDraw();// 开启双缓冲

		cleardevice();// 清空上一帧（避免残影）

		GetLocalTime(&ti);  // 获取当前时间 
		// 秒钟角度变化 
		secondAngle = ti.wSecond * 2 * PI / 60;  // 一圈一共2*PI，一圈60秒，一秒钟秒钟走过的角度为2* PI / 60
		//分针角度变化
		minuteAngle = ti.wMinute * 2 * PI / 60 + secondAngle / 60;
		//时针角度变化
		hourAngle = ti.wHour * 2 * PI / 12 + minuteAngle / 12;

		secondEnd_x = center_x + secondLength * sin(secondAngle);
		secondEnd_y = center_y - secondLength * cos(secondAngle);
		minuteEnd_x = center_x + minuteLength * sin(minuteAngle);
		minuteEnd_y = center_y - minuteLength * cos(minuteAngle);
		hourEnd_x = center_x + hourLength * sin(hourAngle);
		hourEnd_y = center_y - hourLength * cos(hourAngle);
		//画时针 
		setlinestyle(PS_SOLID, 8);//画实线，宽度8个像素
		setcolor(RED);
		line(center_x, center_y, hourEnd_x, hourEnd_y);
		//画分针
		setlinestyle(PS_SOLID, 5);//画实线，宽度5个像素
		setcolor(BLUE);
		line(center_x, center_y, minuteEnd_x, minuteEnd_y);
		//画秒针
		setlinestyle(PS_SOLID, 2);//画实线，宽度2个像素 
		setcolor(WHITE);
		line(center_x, center_y, secondEnd_x, secondEnd_y);

		setlinestyle(PS_SOLID, 1);
		setcolor(WHITE);
		circle(center_x, center_y, Width / 4);
		// 画刻度 
		int x, y, i;
		for (i = 0; i < 60; i++)
		{
			x = center_x + int(Width / 4.3 * sin(PI * 2 * i / 60));
			y = center_y + int(Width / 4.3 * cos(PI * 2 * i / 60));
			if (i % 15 == 0)
				bar(x - 5, y - 5, x + 5, y + 5);
			else if (i % 5 == 0)
				//在表盘0、15、30、45处绘制矩形 
				circle(x, y, 3);  //在表盘 5,10,15,20,…处绘制圆圈 
			else
				putpixel(x, y, WHITE); //在表盘其他位置处绘制点 
		}
		
		FlushBatchDraw();// 提交绘制
		Sleep(1000);//延时1秒

	}

	_getch();    // 按任意键继续 
	closegraph();   // 关闭图形界面 

	system("pause");
}